<?xml version="1.0" encoding="UTF-8"?><testsuite errors="2" failures="0" name="Testing different request on the pet information" skipped="0" tests="2" time="7.46" timestamp="2023-01-10T11:39:22.979Z[Europe/London]"><testcase name="Check if the pet information can be accessed by users"><error message="Invalid number of path parameters. Expected 1, was 0. Undefined path parameters are: petID." type="java.lang.IllegalArgumentException">Invalid number of path parameters. Expected 1, was 0. Undefined path parameters are: petID.</error><system-err>Invalid number of path parameters. Expected 1, was 0. Undefined path parameters are: petID.&#13;
io.restassured.internal.RequestSpecificationImpl.assertCorrectNumberOfPathParams(RequestSpecificationImpl.groovy:1336)&#13;
groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1213)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)&#13;
io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)&#13;
io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1223)&#13;
groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1213)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)&#13;
io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)&#13;
io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)&#13;
io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)&#13;
io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)&#13;
io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)&#13;
io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:124)&#13;
io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)&#13;
io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:124)&#13;
net.serenitybdd.rest.filters.FieldsRecordingFilter.filter(FieldsRecordingFilter.java:40)&#13;
io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)&#13;
io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:124)&#13;
net.serenitybdd.rest.filters.FieldsRecordingFilter.filter(FieldsRecordingFilter.java:40)&#13;
io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)&#13;
io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:124)&#13;
net.serenitybdd.rest.filters.FieldsRecordingFilter.filter(FieldsRecordingFilter.java:40)&#13;
io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)&#13;
io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:124)&#13;
net.serenitybdd.rest.filters.FieldsRecordingFilter.filter(FieldsRecordingFilter.java:40)&#13;
io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)&#13;
io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:124)&#13;
net.serenitybdd.rest.filters.FieldsRecordingFilter.filter(FieldsRecordingFilter.java:40)&#13;
io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)&#13;
io.restassured.filter.log.RequestLoggingFilter.filter(RequestLoggingFilter.java:124)&#13;
net.serenitybdd.rest.filters.FieldsRecordingFilter.filter(FieldsRecordingFilter.java:40)&#13;
io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)&#13;
io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1722)&#13;
groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1213)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)&#13;
io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)&#13;
io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1728)&#13;
groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1213)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)&#13;
groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:810)&#13;
io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)&#13;
io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:168)&#13;
net.serenitybdd.rest.decorators.request.RequestSpecificationDecorated.execute(RequestSpecificationDecorated.java:227)&#13;
net.serenitybdd.rest.decorators.request.RequestSpecificationDecorated.get(RequestSpecificationDecorated.java:48)&#13;
net.serenitybdd.rest.decorators.request.RequestSpecificationDecorated.get(RequestSpecificationDecorated.java:27)&#13;
io.swagger.swaggerinfo.PetSteps.getAllPetInfo(PetSteps.java:95)&#13;
io.swagger.cucumber.step.PetStepdefs.userSendsAGETRequestToPetIDEndpoint(PetStepdefs.java:30)&#13;
âœ½.When User sends a GET request to petID endpoint(src/test/java/resources/feature/pet.feature:4)&#13;
</system-err></testcase><testcase name="Create a new pet &amp; verify if the pet is added"><error message="Don't know how to convert &quot;&quot; into java.util.HashMap.&#10;Try writing your own converter:&#10;&#10;@cucumber.deps.com.thoughtworks.xstream.annotations.XStreamConverter(HashMapConverter.class)&#10;public class HashMap {}&#10;" type="cucumber.runtime.CucumberException">Don't know how to convert "" into java.util.HashMap.
Try writing your own converter:

@cucumber.deps.com.thoughtworks.xstream.annotations.XStreamConverter(HashMapConverter.class)
public class HashMap {}
</error><system-err>Don't know how to convert "" into java.util.HashMap.
Try writing your own converter:

@cucumber.deps.com.thoughtworks.xstream.annotations.XStreamConverter(HashMapConverter.class)
public class HashMap {}
&#13;
</system-err></testcase></testsuite>